$ start-all.sh
$ cd IST3134
$ pig -x local -d error

-- Load the traffic data
traffic = LOAD '/home/hadoop/IST3134/traffic.csv' USING PigStorage(',') AS (ID: int, SPEED: double, TRAVEL_TIME: double, STATUS: chararray, DATA_AS_OF: chararray, LINK_ID: int, LINK_POINTS: chararray, OWNER: chararray, TRANSCOM_ID: chararray, BOROUGH: chararray, LINK_NAME: chararray);

-- Check for the limited traffic
limited_traffic = LIMIT traffic 20;

-- Display the limited traffic
DUMP limited_traffic;

-- Create a constant value for threshold speed
threshold_speed_int = FOREACH traffic GENERATE 500.0 as threshold_speed_int;

-- Filter anomalies based on the threshold value
anomalies = FILTER traffic BY SPEED > (threshold_speed_int.threshold_speed_int / 10.0);

-- Store the anomalies in a file
STORE anomalies INTO '/home/hadoop/IST3134/outputpig/anomalies.csv' USING PigStorage(',');

-- Dump the anomalies
DUMP anomalies;

-- Load the traffic data from CSV
traffic_data = LOAD 'traffic.csv' USING PigStorage(',') AS (
    ID:int,
    SPEED:double,
    TRAVEL_TIME:int,
    STATUS:int,
    DATA_AS_OF:chararray,
    LINK_ID:chararray,
    LINK_POINTS:chararray,
    OWNER:chararray,
    TRANSCOM_ID:int,
    BOROUGH:chararray,
    LINK_NAME:chararray
);

-- Filter the required columns
filtered_data = FOREACH traffic_data GENERATE SPEED, TRAVEL_TIME;

-- Calculate statistics
speed_stats = FOREACH (GROUP filtered_data ALL) GENERATE AVG(filtered_data.SPEED) AS avg_speed, SQRT(AVG(filtered_data.SPEED * filtered_data.SPEED) - AVG(filtered_data.SPEED) * AVG(filtered_data.SPEED)) AS std_dev_speed;

travel_time_stats = FOREACH (GROUP filtered_data ALL) GENERATE AVG(filtered_data.TRAVEL_TIME) AS avg_travel_time, SQRT(AVG(filtered_data.TRAVEL_TIME * filtered_data.TRAVEL_TIME) - AVG(filtered_data.TRAVEL_TIME) * AVG(filtered_data.TRAVEL_TIME)) AS std_dev_travel_time;

-- Detect anomalies
anomalies = FOREACH filtered_data GENERATE
    filtered_data.SPEED AS speed,
    filtered_data.TRAVEL_TIME AS travel_time,
    (filtered_data.SPEED - speed_stats.avg_speed) / speed_stats.std_dev_speed AS speed_zscore,
    (filtered_data.TRAVEL_TIME - travel_time_stats.avg_travel_time) / travel_time_stats.std_dev_travel_time AS travel_time_zscore
;

-- Output the anomalies
STORE anomalies INTO 'anomalies_output' USING PigStorage(',');
